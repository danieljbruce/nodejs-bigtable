// Copyright 2022 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// ** This file is automatically generated by gapic-generator-typescript. **
// ** https://github.com/googleapis/gapic-generator-typescript **
// ** All changes to this file may be overwritten. **

import {grpc} from 'google-gax';
import {SameCallHandler} from './same-call-handler';
import {MockService} from '../../../mock-service';

export class SendErrorHandler extends SameCallHandler {
  code: grpc.status;
  request: any = null;
  callCount = 0;

  // TODO: service and endpoint should be bundled into one object.
  constructor(service: MockService, endpoint: string, code: grpc.status) {
    super(service, endpoint);
    this.code = code;
  }

  callHandler(call: any) {
    call.emit('error', {
      code: this.code,
      details: 'Details for a particular type of error',
    });
  }

  snapshotOutput(results: any): any {
    return {
      input: {
        code: this.code,
      },
      output: {
        results,
        requestData: this.requests(),
      },
    };
  }
}
